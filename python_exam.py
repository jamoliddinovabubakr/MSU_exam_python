# 1. –í—ã–≤–µ—Å—Ç–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–æ–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã. 
"""
–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞:
* –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 'ffgabnnkmm'
* –æ—Ç–≤–µ—Ç: fgabn 
"""

def without_repeating_characters(String1):
  l = []
  for i in String1:
    if not i in l:
      l.append(i)
  return l

S = 'ffgabnnkmm'
S = 'ffgabnndzasdfghjkllkjhgfdsasfghjksl;'
print(*without_repeating_characters(S))


#2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
"""
–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞:
* –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: [5,3,7]
* –æ—Ç–≤–µ—Ç: –Ω–µ—Ç
* –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: [5,6,7]
* –æ—Ç–≤–µ—Ç: –¥–∞
"""
def —Åheck_ascending(lst):
  tmp = sorted(lst)
  return tmp == lst

List = [5, 3, 7]
print(—Åheck_ascending(List))

List = [5, 6, 7]
print(—Åheck_ascending(List))


#3. –í—ã–≤–µ—Å—Ç–∏ 3 –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è
"""
–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞:
* –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: [1, 9, 6, 4, 2, 7, 5]
* –æ—Ç–≤–µ—Ç: [9, 7, 6]
"""
def max_3_numbers(lst):
  max_1 = max(lst)
  lst.remove(max_1)
  max_2 = max(lst)
  lst.remove(max_2)
  max_3 = max(lst)
  return max_1, max_2, max_3

List = [1, 9, 6, 4, 2, 7, 5]
print(max_3_numbers(List))


#4. –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ç–Ω—ã—Ö –∏ –Ω–µ—á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
"""
–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞:
* –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: [1, 9, 6, 4, 2, 7, 5]
* –æ—Ç–≤–µ—Ç: [3, 4]
"""

def number_of_even_and_odd(lst):
  number_even = len([i for i in lst if i % 2 == 0])
  number_oven = len(lst) - number_even
  return number_even, number_oven

List = [1, 9, 6, 4, 2, 7, 5]
print(number_of_even_and_odd(List))

#5. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –ù–∞–π—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤–µ —á–∞—â–µ –≤—Å–µ–≥–æ.
import numpy as np

def most_frequent_value(array):
  return np.bincount(x).argmax()

x = np.random.randint(2, 10, size = 7)
print(x)

print(most_frequent_value(x))


#6. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –µ–¥–∏–Ω–∏—Ü —Ä–∞–∑–º–µ—Ä–∞ 9—Ö9. –ó–∞–º–µ–Ω–∏—Ç—å –Ω—É–ª–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞, –∏–º–µ—é—â–∏–µ —á–µ—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å

import numpy as np

def replace_with_0(arr):
  for i in range(9):
    for j in range(9):
      if i % 2 == 1 and j % 2 == 1:
        arr[i][j] = 0
  return arr

x = np.random.randint(1, 2, size =(9, 9))
print(x)
print('- - - - - - - - - - - -')
print(replace_with_0(x))

#7. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è ùëõ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤–µ.
import numpy as np
def func_2(arr, n):
  l = [i for i in arr if n >= i]
  if len(l) == 0:
    return min(arr)
  else:
    return max(l)

N = 4
array = np.random.randint(0, 10, size=10)
print(array)
print(func_2(array, N))

#8. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–æ–¥—Å—á–µ—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
import numpy as np

def func(arr):
    l = []
    for i in range(len(arr)):
        tmp = 1
        j = i + 1
        if arr[i] in l:
            continue
        while j < len(arr):
            if arr[i] == arr[j] and i <= j:
                tmp = tmp + 1
                l.append(arr[i])
            j = j + 1
        print(arr[i], "->", tmp)

x = np.random.randint(2, 10, size=30)
print(x)
func(x)


#5. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –ö–∞–∂–¥—ã–π —á–µ—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –∑–∞–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ–º 0
import numpy as np
def zero(num):
  for i in range(len(num)):
    if num[i] % 2 == 0:
      num[i] = 0
  return num

x = np.random.randint(2, 10, size = 7)
print(x)

print(zero(x))


#1. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–µ A –≤—ã–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏, —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ –ø–æ C
import pandas as pd
import numpy as np

def df_func(data):
    dt_gr = data.groupby('A')
    for i in dt_gr:
        print(i[1].sort_values(by=['C']).head(3))
    

df = pd.DataFrame()
df['A'] = np.random.randint(0, 10, 30)
df['B'] = np.random.randint(0, 100, 30)
df['C'] = np.random.randint(0, 100, 30)

df_func(df)

###2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–µ –ê –Ω–∞–π—Ç–∏ —Å—É–º–º—É –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å—Ç–æ–ª–±—Ü–∞ B

import numpy as np
import pandas as pd

def df_func(df):
  print(df.groupby('A').agg({'C':sum}))
    

df = pd.DataFrame()
df['A'] = np.random.randint(0, 10, 30)
df['B'] = np.random.randint(0, 100, 30)
df['C'] = np.random.randint(0, 100, 30)

print(df)
print('- - - - - - -')
df_func(df)